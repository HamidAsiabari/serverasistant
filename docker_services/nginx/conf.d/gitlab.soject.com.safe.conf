# Safe nginx configuration for gitlab.soject.com (GitLab)
# This configuration works even if gitlab is not available

server {
    listen 80;
    server_name gitlab.soject.com;

    # Logging
    access_log /var/log/nginx/gitlab.soject.com.access.log;
    error_log /var/log/nginx/gitlab.soject.com.error.log;

    # Root location - try to proxy to gitlab, fallback to simple response
    location / {
        # Try to proxy to gitlab (if available)
        proxy_pass http://gitlab:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support for gitlab
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Short timeouts for quick fallback
        proxy_connect_timeout 3s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
        
        # Error handling - if gitlab is not available, serve fallback
        proxy_intercept_errors on;
        error_page 502 503 504 = @fallback;
    }

    # Fallback location when gitlab is not available
    location @fallback {
        return 200 "GitLab service is not available.\nServer: $server_name\nTo access GitLab directly: http://localhost:8081\n";
        add_header Content-Type text/plain;
    }

    # Health check endpoint
    location /health {
        # Try gitlab health first
        proxy_pass http://gitlab:80/help;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Short timeouts
        proxy_connect_timeout 3s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
        
        # Fallback if gitlab is not available
        proxy_intercept_errors on;
        error_page 502 503 504 = @health_fallback;
    }

    # Health fallback
    location @health_fallback {
        return 200 "GitLab service is not available\n";
        add_header Content-Type text/plain;
    }

    # Status endpoint
    location /status {
        return 200 "GitLab Status: Check /health endpoint\nServer: $server_name\n";
        add_header Content-Type text/plain;
    }
} 